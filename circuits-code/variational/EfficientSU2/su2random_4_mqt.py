from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
import numpy as np

qreg_q = QuantumRegister(4, 'q')
creg_meas = ClassicalRegister(4, 'meas')
circuit = QuantumCircuit(qreg_q, creg_meas)

# Benchmark was created by MQT Bench on 2024-03-18
# For more information about MQT Bench, please visit https://www.cda.cit.tum.de/mqtbench/
# MQT Bench version: 1.1.0
# Qiskit version: 1.0.2
circuit.u(1.4368347742816616, -0.009380718364163876, -np.pi, qreg_q[0])
circuit.u(0.13038834331032634, 1.4124389803026798, 0, qreg_q[1])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.u(2.3018560275705338, -1.8971269718342265, -np.pi, qreg_q[2])
circuit.cx(qreg_q[0], qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.u(1.578311754453951, 1.6369627429575306, -np.pi, qreg_q[3])
circuit.cx(qreg_q[0], qreg_q[3])
circuit.u(1.062554723574571, 0.02480768898038388, 0, qreg_q[0])
circuit.cx(qreg_q[1], qreg_q[3])
circuit.u(0.5550554224571163, -3.064986403423018, 0, qreg_q[1])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.u(1.9769425662797726, 1.9642554329689128, -np.pi, qreg_q[2])
circuit.cx(qreg_q[0], qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.u(0.2928382424047806, 0.70702212977712, -np.pi, qreg_q[3])
circuit.cx(qreg_q[0], qreg_q[3])
circuit.u(1.748262901313365, 0.2673141479915975, -np.pi, qreg_q[0])
circuit.cx(qreg_q[1], qreg_q[3])
circuit.u(1.8339114230470694, 0.8932807542109362, 0, qreg_q[1])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.u(0.5166404252966228, -0.7958234754631421, -np.pi, qreg_q[2])
circuit.cx(qreg_q[0], qreg_q[2])
circuit.cx(qreg_q[1], qreg_q[2])
circuit.u(1.7933732440688746, 1.0941137716709264, -np.pi, qreg_q[3])
circuit.cx(qreg_q[0], qreg_q[3])
circuit.u(2.7761197097590844, -2.196619289836783, 0, qreg_q[0])
circuit.cx(qreg_q[1], qreg_q[3])
circuit.u(2.72699034602209, -2.5067461861055573, 0, qreg_q[1])
circuit.cx(qreg_q[2], qreg_q[3])
circuit.u(2.4016409048004452, 1.917773905749895, -np.pi, qreg_q[2])
circuit.u(3.059042641009883, 0.13601306986195905, -np.pi, qreg_q[3])
circuit.barrier(qreg_q[0], qreg_q[1], qreg_q[2], qreg_q[3])
circuit.measure(qreg_q[0], creg_meas[0])
circuit.measure(qreg_q[1], creg_meas[1])
circuit.measure(qreg_q[2], creg_meas[2])
circuit.measure(qreg_q[3], creg_meas[3])