from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from numpy import pi

qreg_q = QuantumRegister(14, 'q')
creg_c = ClassicalRegister(14, 'c')
circuit = QuantumCircuit(qreg_q, creg_c)

circuit.h(qreg_q[0])
circuit.h(qreg_q[1])
circuit.h(qreg_q[2])
circuit.h(qreg_q[3])
circuit.h(qreg_q[4])
circuit.h(qreg_q[5])
circuit.h(qreg_q[6])
circuit.h(qreg_q[7])
circuit.h(qreg_q[8])
circuit.h(qreg_q[9])
circuit.h(qreg_q[10])
circuit.h(qreg_q[11])
circuit.h(qreg_q[12])
circuit.x(qreg_q[13])
circuit.h(qreg_q[13])
circuit.cx(qreg_q[0], qreg_q[13])
circuit.cx(qreg_q[1], qreg_q[13])
circuit.h(qreg_q[0])
circuit.cx(qreg_q[2], qreg_q[13])
circuit.h(qreg_q[1])
circuit.cx(qreg_q[3], qreg_q[13])
circuit.h(qreg_q[2])
circuit.cx(qreg_q[4], qreg_q[13])
circuit.h(qreg_q[3])
circuit.cx(qreg_q[5], qreg_q[13])
circuit.h(qreg_q[4])
circuit.cx(qreg_q[6], qreg_q[13])
circuit.h(qreg_q[5])
circuit.cx(qreg_q[7], qreg_q[13])
circuit.h(qreg_q[6])
circuit.cx(qreg_q[8], qreg_q[13])
circuit.h(qreg_q[7])
circuit.cx(qreg_q[9], qreg_q[13])
circuit.h(qreg_q[8])
circuit.cx(qreg_q[10], qreg_q[13])
circuit.h(qreg_q[9])
circuit.measure(qreg_q[9], creg_c[9])
circuit.cx(qreg_q[11], qreg_q[13])
circuit.h(qreg_q[10])
circuit.measure(qreg_q[10], creg_c[10])
circuit.cx(qreg_q[12], qreg_q[13])
circuit.h(qreg_q[11])
circuit.measure(qreg_q[11], creg_c[11])
circuit.h(qreg_q[12])
circuit.h(qreg_q[13])
circuit.measure(qreg_q[0], creg_c[0])
circuit.measure(qreg_q[1], creg_c[1])
circuit.measure(qreg_q[2], creg_c[2])
circuit.measure(qreg_q[3], creg_c[3])
circuit.measure(qreg_q[4], creg_c[4])
circuit.measure(qreg_q[6], creg_c[6])
circuit.measure(qreg_q[7], creg_c[7])
circuit.measure(qreg_q[8], creg_c[8])
circuit.measure(qreg_q[12], creg_c[12])
circuit.measure(qreg_q[13], creg_c[13])