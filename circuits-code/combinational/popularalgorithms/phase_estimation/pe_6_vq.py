from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
import numpy as np

qreg_q = QuantumRegister(7, 'q')
creg_c = ClassicalRegister(7, 'c')
circuit = QuantumCircuit(qreg_q, creg_c)

circuit.h(qreg_q[0])
circuit.h(qreg_q[1])
circuit.h(qreg_q[2])
circuit.h(qreg_q[3])
circuit.h(qreg_q[4])
circuit.h(qreg_q[5])
circuit.cp(np.pi / 512, qreg_q[5], qreg_q[6])
circuit.cp(np.pi / 256, qreg_q[4], qreg_q[6])
circuit.cp(np.pi / 128, qreg_q[3], qreg_q[6])
circuit.cp(np.pi / 64, qreg_q[2], qreg_q[6])
circuit.cp(np.pi / 32, qreg_q[1], qreg_q[6])
circuit.cp(np.pi / 16, qreg_q[0], qreg_q[6])
circuit.h(qreg_q[0])
circuit.cp(-np.pi / 2, qreg_q[0], qreg_q[1])
circuit.cp(-np.pi / 4, qreg_q[0], qreg_q[2])
circuit.cp(-np.pi / 8, qreg_q[0], qreg_q[3])
circuit.cp(-np.pi / 16, qreg_q[0], qreg_q[4])
circuit.cp(-np.pi / 32, qreg_q[0], qreg_q[5])
circuit.h(qreg_q[1])
circuit.cp(-np.pi / 2, qreg_q[1], qreg_q[2])
circuit.cp(-np.pi / 4, qreg_q[1], qreg_q[3])
circuit.cp(-np.pi / 8, qreg_q[1], qreg_q[4])
circuit.cp(-np.pi / 16, qreg_q[1], qreg_q[5])
circuit.h(qreg_q[2])
circuit.cp(-np.pi / 2, qreg_q[2], qreg_q[3])
circuit.cp(-np.pi / 4, qreg_q[2], qreg_q[4])
circuit.cp(-np.pi / 8, qreg_q[2], qreg_q[5])
circuit.h(qreg_q[3])
circuit.cp(-np.pi / 2, qreg_q[3], qreg_q[4])
circuit.cp(-np.pi / 4, qreg_q[3], qreg_q[5])
circuit.h(qreg_q[4])
circuit.cp(-np.pi / 2, qreg_q[4], qreg_q[5])
circuit.h(qreg_q[5])
circuit.measure(qreg_q[0], creg_c[0])
circuit.measure(qreg_q[1], creg_c[1])
circuit.measure(qreg_q[2], creg_c[2])
circuit.measure(qreg_q[3], creg_c[4])
circuit.measure(qreg_q[5], creg_c[5])
circuit.measure(qreg_q[6], creg_c[6])