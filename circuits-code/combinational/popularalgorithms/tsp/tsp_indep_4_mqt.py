from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
import numpy as np

qreg_q = QuantumRegister(4, 'q')
creg_meas = ClassicalRegister(4, 'meas')
circuit = QuantumCircuit(qreg_q, creg_meas)

# Benchmark was created by MQT Bench on 2024-03-19
# For more information about MQT Bench, please visit https://www.cda.cit.tum.de/mqtbench/
# MQT Bench version: 1.1.0
# Qiskit version: 1.0.2
circuit.ry(0.3639515108210906, qreg_q[0])
circuit.ry(-3.635990261432437, qreg_q[1])
circuit.cz(qreg_q[0], qreg_q[1])
circuit.ry(-1.002813228816168, qreg_q[0])
circuit.ry(3.362268080070584, qreg_q[2])
circuit.cz(qreg_q[1], qreg_q[2])
circuit.ry(6.243016014063322, qreg_q[1])
circuit.cz(qreg_q[0], qreg_q[1])
circuit.ry(0.8811055252112134, qreg_q[0])
circuit.ry(2.9808572300959044, qreg_q[3])
circuit.cz(qreg_q[2], qreg_q[3])
circuit.ry(3.076180161567417, qreg_q[2])
circuit.cz(qreg_q[1], qreg_q[2])
circuit.ry(3.5997755951020247, qreg_q[1])
circuit.cz(qreg_q[0], qreg_q[1])
circuit.ry(-3.8705959422613034, qreg_q[0])
circuit.ry(-1.9599706708457578, qreg_q[3])
circuit.cz(qreg_q[2], qreg_q[3])
circuit.ry(4.560604436086811, qreg_q[2])
circuit.cz(qreg_q[1], qreg_q[2])
circuit.ry(3.836947786309806, qreg_q[1])
circuit.cz(qreg_q[0], qreg_q[1])
circuit.ry(-3.6364557194733527, qreg_q[0])
circuit.ry(5.8061284709341265, qreg_q[3])
circuit.cz(qreg_q[2], qreg_q[3])
circuit.ry(-3.8237047898941157, qreg_q[2])
circuit.cz(qreg_q[1], qreg_q[2])
circuit.ry(5.382258257999492, qreg_q[1])
circuit.cz(qreg_q[0], qreg_q[1])
circuit.ry(0.4608030009462126, qreg_q[0])
circuit.ry(5.991413266982324, qreg_q[3])
circuit.cz(qreg_q[2], qreg_q[3])
circuit.ry(-3.1604705609650257, qreg_q[2])
circuit.cz(qreg_q[1], qreg_q[2])
circuit.ry(-3.8085796950542656, qreg_q[1])
circuit.ry(6.4608361773846, qreg_q[3])
circuit.cz(qreg_q[2], qreg_q[3])
circuit.ry(-2.709332149091332, qreg_q[2])
circuit.ry(1.6710555259169388, qreg_q[3])
circuit.barrier(qreg_q[0], qreg_q[1], qreg_q[2], qreg_q[3])
circuit.measure(qreg_q[0], creg_meas[0])
circuit.measure(qreg_q[1], creg_meas[1])
circuit.measure(qreg_q[2], creg_meas[2])
circuit.measure(qreg_q[3], creg_meas[3])